pipeline {
  agent any

  environment {
    REPO_URL     = 'git@github.com:Xtute-Technologies/tutorlix_next.git'
    BRANCH       = 'main'
    DEPLOY_PATH  = '/srv/tutorlix/frontend/tutorlix_next'
    COMPOSE_FILE = 'docker-compose.yml'
    ROOT_APP_DIR = 'ui-lake'     // üëà change if folder name differs
    BUILD_DIR    = 'dist'        // üëà change if build folder is build/ or .next
  }

  stages {

    stage('Checkout') {
      steps {
        git branch: "${BRANCH}", credentialsId: 'github-ssh-key', url: "${REPO_URL}"
      }
    }

    stage('Build Single-SPA Root') {
      steps {
        dir("${ROOT_APP_DIR}") {
          sh '''
            echo "üì¶ Installing dependencies..."
            npm ci

            echo "üèóÔ∏è Building single-spa root app..."
            npm i
            npm run build

            echo "‚úÖ Build complete. Files in ${BUILD_DIR}:"
            ls -lah ${BUILD_DIR} || true
          '''
        }
      }
    }

    stage('Deploy Locally') {
      steps {
        sh '''
          echo "üöö Deploying build to ${DEPLOY_PATH}..."

          # Ensure deploy directory exists
          sudo mkdir -p ${DEPLOY_PATH}
          sudo chown -R $USER:$USER ${DEPLOY_PATH}

          # Copy docker-compose.yml
          cp ${COMPOSE_FILE} ${DEPLOY_PATH}/

          # Replace old build with new one
          rm -rf ${DEPLOY_PATH}/${ROOT_APP_DIR}/${BUILD_DIR}
          mkdir -p ${DEPLOY_PATH}/${ROOT_APP_DIR}/
          cp -r ${ROOT_APP_DIR}/${BUILD_DIR} ${DEPLOY_PATH}/${ROOT_APP_DIR}/

          echo "üîÅ Rebuilding and restarting Docker containers..."
          cd ${DEPLOY_PATH}
          docker compose -f ${COMPOSE_FILE} down || true
          docker compose -f ${COMPOSE_FILE} build --no-cache
          docker compose -f ${COMPOSE_FILE} up -d --remove-orphans

          echo "‚úÖ Deployment successful. Containers running:"
          docker ps --filter "name=tutorlix" --format "table {{.Names}}\t{{.Status}}"
        '''
      }
    }

    stage('Restart Nginx') {
      steps {
        sh '''
          echo "‚ôªÔ∏è Restarting Nginx..."
          sudo systemctl restart nginx || echo "‚ö†Ô∏è Nginx restart skipped (no permission)"
        '''
      }
    }
  }

  post {
    success {
      echo "‚úÖ Single-SPA root app deployed successfully at https://xtute.com"
    }
    failure {
      echo "‚ùå Deployment failed. Check Jenkins console output for details."
    }
  }
}
